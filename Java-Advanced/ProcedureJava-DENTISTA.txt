REPOSITORY:

@Repository
public interface DentistaRepository extends JpaRepository<Dentista, Long> {

    @Procedure(name = "CRUD_DENTISTA")
    void CRUD_DENTISTA(
        @Param("v_operacao") String operacao,
        @Param("v_id_dentista") Long idDentista,
        @Param("v_nome_dentista") String nomeDentista,
        @Param("v_senha_dentista") String senhaDentista,
        @Param("v_cro") String cro,
        @Param("v_telefone_dentista") String telefoneDentista,
        @Param("v_email_dentista") String emailDentista,
        @Param("v_id_especialidade") Long idEspecialidade
    );
}



------------------------------------------------------------------------------------
SERVICE:

@Transactional
    public void insertWithProcedure(DentistaDTO dentistaDTO) {
        dentistaRepository.CRUD_DENTISTA(
            "INSERT",
            dentistaDTO.getIdDentista(),
            dentistaDTO.getNomeDentista(),
            dentistaDTO.getSenhaDentista(),
            dentistaDTO.getCro(),
            dentistaDTO.getTelefoneDentista(),
            dentistaDTO.getEmailDentista(),
            dentistaDTO.getIdEspecialidade()
        );
}

@Transactional
public void updateWithProcedure(DentistaDTO dentistaDTO) {
    dentistaRepository.CRUD_DENTISTA(
        "UPDATE",
        dentistaDTO.getIdDentista(),
        dentistaDTO.getNomeDentista(),
        dentistaDTO.getSenhaDentista(),
        dentistaDTO.getCro(),
        dentistaDTO.getTelefoneDentista(),
        dentistaDTO.getEmailDentista(),
        dentistaDTO.getIdEspecialidade()
    );
}


@Transactional
public void deleteWithProcedure(Long idDentista) {
    dentistaRepository.CRUD_DENTISTA(
        "DELETE",
        idDentista,
        null,
        null,
        null,
        null,
        null,
        null
    );
}




------------------------------------------------------------------------------------
CONTROLLER:

@PostMapping("/withProcedure")
    public ResponseEntity<String> insertWithProcedure(@RequestBody @Valid DentistaDTO dentistaDTO) {
        dentistaService.insertWithProcedure(dentistaDTO);
        return ResponseEntity.ok("Dentista inserido com sucesso.");
}


@PutMapping("/withProcedure")
public ResponseEntity<String> updateWithProcedure(@RequestBody @Valid DentistaDTO dentistaDTO) {
    dentistaService.updateWithProcedure(dentistaDTO);
    return ResponseEntity.ok("Dentista atualizado com sucesso.");
}


@DeleteMapping("/withProcedure/{idDentista}")
public ResponseEntity<String> deleteWithProcedure(@PathVariable Long idDentista) {
    dentistaService.deleteWithProcedure(idDentista);
    return ResponseEntity.ok("Dentista deletado com sucesso.");
}



------------------------------------------------------------------------------------
DTO:

import javax.validation.constraints.NotNull;

public class DentistaDTO {
    private Long idDentista;

    @NotNull
    private String nomeDentista;

    @NotNull
    private String senhaDentista;

    @NotNull
    private String cro;

    private String telefoneDentista;
    private String emailDentista;
    private Long idEspecialidade;

}

------------------------------------------------------------------------------------
POSTMAN
http://localhost:8080/dentistas/withProcedure

{
    "idDentista": 1,
    "nomeDentista": "Dr. Carlos Souza",
    "senhaDentista": "senha123",
    "cro": "123456SP",
    "telefoneDentista": "99999-9999",
    "emailDentista": "carlos.souza@example.com",
    "idEspecialidade": 2
}
